[{"C:\\Users\\sirisha\\hms-app\\src\\index.js":"1","C:\\Users\\sirisha\\hms-app\\src\\App.js":"2","C:\\Users\\sirisha\\hms-app\\src\\reportWebVitals.js":"3","C:\\Users\\sirisha\\hms-app\\src\\components\\SidebarData.js":"4","C:\\Users\\sirisha\\hms-app\\src\\components\\Navbar.js":"5","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Registration.js":"6","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Reports.js":"7","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Home.js":"8","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Inpatient.js":"9","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Outpatient.js":"10","C:\\Users\\sirisha\\hms-app\\src\\Pages\\LoginPage.js":"11"},{"size":199,"mtime":1611742818440,"results":"12","hashOfConfig":"13"},{"size":789,"mtime":1611757675008,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":856,"mtime":1611755478656,"results":"16","hashOfConfig":"13"},{"size":1722,"mtime":1611762468046,"results":"17","hashOfConfig":"13"},{"size":4311,"mtime":1611763163880,"results":"18","hashOfConfig":"13"},{"size":167,"mtime":1611754710946,"results":"19","hashOfConfig":"13"},{"size":158,"mtime":1611754741135,"results":"20","hashOfConfig":"13"},{"size":168,"mtime":1611755316782,"results":"21","hashOfConfig":"13"},{"size":171,"mtime":1611755240179,"results":"22","hashOfConfig":"13"},{"size":1268,"mtime":1611818952672,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ylicrj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sirisha\\hms-app\\src\\index.js",[],["52","53"],"C:\\Users\\sirisha\\hms-app\\src\\App.js",[],"C:\\Users\\sirisha\\hms-app\\src\\reportWebVitals.js",[],"C:\\Users\\sirisha\\hms-app\\src\\components\\SidebarData.js",["54"],"import React from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\n\r\nexport const SidebarData= [\r\n{\r\n    title:'Home',\r\n    path: '/',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Registration',\r\n    path: '/registration',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Outpatient',\r\n    path: '/outpatient',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Inpatient',\r\n    path: '/inpatient',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Reports',\r\n    path: '/reports',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    cName: 'nav-text'\r\n},\r\n{\r\n    title:'Labs',\r\n    path: '/labs',\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: 'nav-text'\r\n}\r\n\r\n]",["55","56"],"C:\\Users\\sirisha\\hms-app\\src\\components\\Navbar.js",["57"],"import React, {useState} from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\"; \r\nimport {Link} from \"react-router-dom\";\r\nimport {SidebarData} from \"./SidebarData\";\r\nimport './Navbar.css';\r\nimport {IconContext} from 'react-icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n\r\n    const history = useHistory();\r\n    const[sidebar, setSidebar] = useState(false);\r\n    \r\n    const showSidebar =() => setSidebar(!sidebar)\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color: '#fff'}}>\r\n        <div className=\"navbar\">\r\n            \r\n            <Link to=\"#\" className='menu-bars'>\r\n                <FaIcons.FaBars onClick={showSidebar}/>\r\n            </Link>\r\n            <h1 style={{textAlign: \"center\"}}>Hospital Management System</h1>\r\n\r\n        </div>\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n            <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n                <li className=\"navbar-toggle\">\r\n                    <Link to=\"#\" className=\"menu-bars\">\r\n                        <AiIcons.AiOutlineClose/>\r\n                    </Link>\r\n                </li>\r\n                {SidebarData.map((item,index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Registration.js",["58"],"import '../App.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nfunction Registration() {\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input>. We can use field meta to show an error\r\n  // message if the field is invalid and it has been touched (i.e. visited)\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n    // React treats radios and checkbox inputs differently other input types, select, and textarea.\r\n    // Formik does this too! When you specify `type` to useField(), it will\r\n    // return the correct bag of props for you\r\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\r\n    return (\r\n      <div>\r\n        <label className=\"checkbox\">\r\n          <input type=\"checkbox\" {...field} {...props} />\r\n          {children}\r\n        </label>\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const MySelect = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n      <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error\">{meta.error}</div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  // And now we can use these\r\n\r\n    return (\r\n      <>\r\n        <h1>Subscribe!</h1>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            acceptedTerms: false, // added for our checkbox\r\n            jobType: '', // added for our select\r\n          }}\r\n          validationSchema={Yup.object({\r\n            firstName: Yup.string()\r\n              .max(15, 'Must be 15 characters or less')\r\n              .required('Required'),\r\n            lastName: Yup.string()\r\n              .max(20, 'Must be 20 characters or less')\r\n              .required('Required'),\r\n            email: Yup.string()\r\n              .email('Invalid email address')\r\n              .required('Required'),\r\n            acceptedTerms: Yup.boolean()\r\n              .required('Required')\r\n              .oneOf([true], 'You must accept the terms and conditions.'),\r\n            jobType: Yup.string()\r\n              .oneOf(\r\n                ['designer', 'development', 'product', 'other'],\r\n                'Invalid Job Type'\r\n              )\r\n              .required('Required'),\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n\r\n          >\r\n        <Form class=\"centered\">\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"Jane\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            placeholder=\"Doe\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"jane@formik.com\"\r\n          />\r\n          <MySelect label=\"Job Type\" name=\"jobType\">\r\n            <option value=\"\">Select a job type</option>\r\n            <option value=\"designer\">Designer</option>\r\n            <option value=\"development\">Developer</option>\r\n            <option value=\"product\">Product Manager</option>\r\n            <option value=\"other\">Other</option>\r\n          </MySelect>\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Registration;","C:\\Users\\sirisha\\hms-app\\src\\Pages\\Reports.js",[],"C:\\Users\\sirisha\\hms-app\\src\\Pages\\Home.js",[],["59","60"],"C:\\Users\\sirisha\\hms-app\\src\\Pages\\Inpatient.js",[],"C:\\Users\\sirisha\\hms-app\\src\\Pages\\Outpatient.js",[],"C:\\Users\\sirisha\\hms-app\\src\\Pages\\LoginPage.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":13,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":18},{"ruleId":"66","severity":1,"message":"73","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":16},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":28,"nodeType":"78","endLine":28,"endColumn":40},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'FaIcons' is defined but never used.","Identifier","unusedVar",["79"],["80"],"'history' is assigned a value but never used.","'ReactDOM' is defined but never used.",["79"],["80"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]